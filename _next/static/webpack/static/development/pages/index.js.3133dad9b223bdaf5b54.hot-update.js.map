{"version":3,"file":"static/webpack/static/development/pages/index.js.3133dad9b223bdaf5b54.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./util/Utils.js"],"sourcesContent":["import Link from 'next/link';\nimport Utils from '../util/Utils';\n\nconst style = (\n    <style jsx>{`\n        @import url('https://fonts.googleapis.com/css?family=Bungee&display=swap');\n\n        body {\n            background-color: black;\n            color: white;\n            font-family: 'Bungee', cursive;\n            height: 100vh;\n            padding: 0;\n            margin: 0;\n        }\n        a {\n            color: white;\n            text-decoration: none;\n        }\n        a:hover {\n            color: #65bafb;\n        }\n        p {\n            position: relative;\n        }\n        .standup-home {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            position: relative;\n        }\n        .side {\n            display: flex;\n            flex-direction: column;\n            white-space: nowrap;\n        }\n        .left-side {\n            text-align: right;\n            position: absolute;\n            right: 100%;\n            top: 28%;\n            font-size: 24px;\n        }\n        .right-side {\n            text-align: left;\n            position: absolute;\n            left: 100%;\n            top: 24%;\n            font-size: 24px;\n        }\n        .title {\n            font-size: 70px;\n            text-align: center;\n            padding: 0 1em;\n            display: flex;\n            flex-direction: column;\n        }\n        .bell {\n            cursor: pointer;\n            text-shadow: 0 0 0 white;\n            color: transparent;\n        }\n    `}</style>\n);\n\nclass Home extends React.Component {\n    componentDidMount() {\n        Utils.loadVoices();\n    }\n    render() {\n        return (\n            <div className=\"standup-home\">\n                <p className=\"title\">\n                    <span className=\"side left-side\">\n                        <a href=\"https://go.indeed.com/prime-standup-zoom\" target=\"_blank\" rel=\"noopener noreferrer\">Standup Zoom</a>\n                        <a href=\"https://go.indeed.com/prime-kanban-overall\" target=\"_blank\" rel=\"noopener noreferrer\">Kanban Overall</a>\n                    </span>\n\n                    <span>time</span>\n                    <span>for</span>\n                    <span>standup</span>\n                    <span\n                        className=\"bell\"\n                        role=\"img\"\n                        onClick={() => Utils.say('Time for standup')}\n                        aria-label=\"Time for standup!\">ðŸ””</span>\n\n                    <span className=\"side right-side\">\n                        <Link href=\"/cards\"><a>Pick a Card!</a></Link>\n                        <Link href=\"/wheel\"><a>Spin the Wheel!</a></Link>\n                        <Link href=\"/plinko\"><a>Plinko!</a></Link>\n                    </span>\n                </p>\n\n                {style}\n            </div>\n        );\n    }\n}\n\nexport default Home;","// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n// https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\nfunction shuffle(a) {\n    let j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\nconst Utils = {\n    names: shuffle([\n        { value: 'Ali' },\n        { value: 'Asim', spoken: 'Ahhsim' },\n        { value: 'Betty' },\n        { value: 'Bradley' },\n        { value: 'Bryan' },\n        { value: 'Chris' },\n        { value: 'Drew', spoken: 'Drew, my humble creator,' },\n        { value: 'Dom' },\n        { value: 'Gaurav', spoken: 'G' },\n        { value: 'Gregory' },\n        { value: 'Jesse', spoken: 'Lorenzo' },\n        { value: 'John' },\n        { value: 'Jordan' },\n        //{ value: 'Karan' },\n        { value: 'Kelsey' },\n        { value: 'Luis' },\n        { value: 'Megan' },\n        { value: 'Mike', spoken: 'Mikey' },\n        { value: 'Mohan' },\n        { value: 'Nick' },\n        { value: 'Rich' },\n        { value: 'Tyler' },\n        { value: 'Xiaojun' },\n        { value: 'Ytalo' }\n    ]),\n    loadVoices() {\n        window.speechSynthesis.getVoices();\n    },\n    say: (msgTxt) => {\n        window.speechSynthesis.getVoices();\n\n        window.speechSynthesis.cancel();\n        const msg = new SpeechSynthesisUtterance(msgTxt);\n        const voices = window.speechSynthesis.getVoices()\n            .filter(v => v.lang === 'en-GB' && v.name.indexOf('Male') > -1);\n        msg.voice = voices[0];\n        window.speechSynthesis.speak(msg);\n    }\n};\n\nexport default Utils;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA6DA;;;;;;;;;;;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAhCA;AACA;AAkCA;;;;;;;;;;;;ACrGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAvCA;AA0CA;;;;A","sourceRoot":""}
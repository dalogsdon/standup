{"version":3,"file":"static/webpack/static/development/pages/grid.js.ff9434b6ddbc76ad4661.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./pages/grid.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","import Utils from '../util/Utils';\n\nimport '../styles/grid.scss';\n\nfunction wrapDir(i, length) {\n    const negative = i < 0 ? -1 : 1;\n    const mod = negative * (i % length);\n    if (mod < 0) {\n        return length - mod;\n    }\n    return mod;\n}\n\nclass Grid extends React.Component {\n    state = {\n        highlight: {},\n        names: Utils.getNames(),\n        stopping: false,\n        winner: null,\n    };\n    colCount = Math.ceil(Math.sqrt(this.state.names.length));\n    nameIdCounter = 0;\n    nameIds = new Set();\n    _getNameId = () => {\n        return ++this.nameIdCounter;\n    };\n    componentDidMount() {\n        Utils.loadVoices();\n        this.pickName(50);\n    }\n    declareWinner = (nameId, isEngineer) => {\n        this.incrementToFilteredWinner(nameId, isEngineer).then(() => {\n            const winner = this.state.names[this.state.highlight[nameId]];\n            Utils.say(`${winner.spoken || winner.value} is the winner!`);\n            this.setState({ winner });\n        });\n    };\n    manuallyDeclareWinner = (winner, nameId, highlight) => () => {\n        if (this.state.winner) {\n            Utils.say(`Just kidding, ${winner.spoken || winner.value} is actually the winner!`);\n            this.setState({ winner, highlight: { ...this.state.highlight } });\n        }\n    };\n    incrementToFilteredWinner = (nameId, isEngineer) => {\n        if (isEngineer !== undefined) {\n            return new Promise((resolve, reject) => {\n                resolve();\n            });\n        }\n        return Promise.resolve();\n    };\n    pickName = (timeout, isEngineer) => {\n        this._pickNameRecur(timeout, isEngineer, this._getNameId());\n    };\n    _pickNameRecur = (timeout, isEngineer, nameId) => {\n        if (timeout > 400) {\n            this.nameIds.delete(nameId);\n            if (this.nameIds.size === 0) {\n                this.declareWinner(nameId, isEngineer);\n            }\n        } else {\n            window.setTimeout(() => {\n                const c = this.state.highlight;\n                const dir = [c - this.colCount, c - 1, c + this.colCount, c + 1];\n                const randomDir = wrapDir(dir[Math.floor(Math.random() * dir.length)], this.state.names.length);\n                const nextTimeout = this.state.stopping ? timeout * 1.05 : timeout;\n                this.setState({ highlight: randomDir }, () => this._pickNameRecur(nextTimeout, nameId));\n            }, timeout);\n        }\n    };\n    stop = () => {\n        this.setState({ stopping: true });\n    };\n    render() {\n        const { names, highlight, stopping, winner } = this.state;\n\n        const style = {\n            width: 100 / this.colCount + '%',\n        };\n\n        let stopText = 'Stop!';\n        if (!winner && stopping) {\n            stopText = 'Stopping!';\n        } else if (winner) {\n            stopText = winner.value + ' is the winner!';\n        }\n\n        const classname = `grid ${stopping ? 'stopping' : ''}`;\n        return (\n            <div className={classname}>\n                {names.map((n, i) =>\n                    <div className=\"name-wrapper\" key={n.value} style={style}>\n                        <div\n                            className=\"name\"\n                            data-highlight={i === highlight}\n                            data-winner={i === highlight && !!winner}\n                            onClick={this.manuallyDeclareWinner(n, i)}>\n                            {n.value}\n                        </div>\n                    </div>\n                )}\n                <div className=\"stop-btn-wrapper\">\n                    <div className=\"stop-btn\" onClick={this.stop}>{stopText}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Grid;\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AA/CA;AACA;AACA;AACA;;;AA4CA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7FA;AACA;AA+FA;;;;A","sourceRoot":""}